Rating data
===========
The format is as follows

item1,user1:3,user2:4,..
item2,user2:5,user4:2,...

Ypu can use ratings.rb as follows to generate ratings data
ruby ratings.rb <item_count> <user_count> <user_per_items_multipler>

In the output, average number of users ratin an item will be 
item_count *  user_per_items_multipler / user_count

So choose the last argument as per your need.

It rquires util.rb to be in the ../lib directory. You can get util.rb
from the visitante project at the following location

https://github.com/pranab/visitante/tree/master/script/ruby


User count should be an order of magnitude higher than item count

Dependency Jars
===============
Please refer to resource/jar_dpendency.txt

Implicit Rating Predictor (optiuonal)
=========================
This one is optional. You want to run this MR if you want to generate rating data
from user engaement click stream data. If you have generated rating data from script
then skip this.

JAR_NAME=/home/pranab/Projects/sifarish/target/sifarish-1.0.jar
CLASS_NAME=org.sifarish.common.ImplicitRatingEstimator

echo "running mr"
IN_PATH=/user/pranab/reco/enga
OUT_PATH=/user/pranab/reco/rate
echo "input $IN_PATH output $OUT_PATH"
hadoop fs -rmr $OUT_PATH
echo "removed output dir"

hadoop jar $JAR_NAME  $CLASS_NAME -Dconf.path=/home/pranab/Projects/bin/sifarish/reco.properties  $IN_PATH  $OUT_PATH


Rating correlation
==================
Correlation can be calculated in various ways. We will be using cosine similarity.

Here is shell script to calculate correlation. Rating data should be copied to 
IN_PATH directory

JAR_NAME=/home/pranab/Projects/sifarish/target/sifarish-1.0.jar
CLASS_NAME=org.sifarish.common.ItemDynamicAttributeSimilarity

echo "running mr"
IN_PATH=/user/pranab/reco/item
OUT_PATH=/user/pranab/reco/simi
echo "input $IN_PATH output $OUT_PATH"
hadoop fs -rmr $OUT_PATH
echo "removed output dir"

hadoop jar $JAR_NAME  $CLASS_NAME -Dconf.path=/home/pranab/Projects/bin/sifarish/reco.properties  $IN_PATH  $OUT_PATH



If you wanted to use some other correlator, for example Pearson Correlator, change the CLASS_NAME 
in the script as follows
CLASS_NAME=org.sifarish.social.PearsonCorrelator


Rating Predictor
================
The next step is to predict rating based on items already rated by user and the correlation
calculated in the first MR

The shell scripts is as follows. The input directory is the output directory of the previous
MR. Hadoop creates some directories and files besides the output. Please remove everything
except for the putput files 

The rating file should also be copied there. The rating file name should have the prefix as 
defined by the config param rating.file.prefix

JAR_NAME=/home/pranab/Projects/sifarish/target/sifarish-1.0.jar
CLASS_NAME=org.sifarish.common.UtilityPredictor

echo "running mr"
IN_PATH=/user/pranab/reco/simi
OUT_PATH=/user/pranab/reco/utpr
echo "input $IN_PATH output $OUT_PATH"
hadoop fs -rmr $OUT_PATH
echo "removed output dir"

hadoop jar $JAR_NAME  $CLASS_NAME -Dconf.path=/home/pranab/Projects/bin/sifarish/reco.properties  $IN_PATH  $OUT_PATH

Aggregate Rating Predictor
==========================
This predicts the final rating by aggregating contribution from all items rated by the user

Here is the sample shell script. It's input is the output of the previous MR 

JAR_NAME=/home/pranab/Projects/sifarish/target/sifarish-1.0.jar
CLASS_NAME=org.sifarish.common.UtilityAggregator

echo "running mr"
IN_PATH=/user/pranab/reco/utpr
OUT_PATH=/user/pranab/reco/utag
echo "input $IN_PATH output $OUT_PATH"
hadoop fs -rmr $OUT_PATH
echo "removed output dir"

hadoop jar $JAR_NAME  $CLASS_NAME -Dconf.path=/home/pranab/Projects/bin/sifarish/reco.properties  $IN_PATH  $OUT_PATH

Business Goal Injection (optional)
=======================
This is an optional MR, that combines scores of various business goals with recommendation score
using relative weighting to come up with the final score

Here is the sample shell script. It's input is the output of the previous MR 

 
JAR_NAME=/home/pranab/Projects/sifarish/target/sifarish-1.0.jar
CLASS_NAME=org.sifarish.common.BusinessGoalInjector

echo "running mr"
IN_PATH=/user/pranab/reco/utag
OUT_PATH=/user/pranab/reco/bigo
echo "input $IN_PATH output $OUT_PATH"
hadoop fs -rmr $OUT_PATH
echo "removed output dir"

hadoop jar $JAR_NAME  $CLASS_NAME -Dconf.path=/home/pranab/Projects/bin/sifarish/reco.properties  $IN_PATH  $OUT_PATH

Order by User ID (optional)
================
It orders the final result by userID, so that you get all recommendation for
a given user together

Here is the sample shell script. It's input is the output of the previous MR 

JAR_NAME=/home/pranab/Projects/chombo/target/chombo-1.0.jar
CLASS_NAME=org.chombo.mr.TextSorter

hadoop fs -rmr /user/pranab/reco/bigo/_logs
hadoop fs -rmr /user/pranab/reco/bigo/_SUCCESS

echo "running mr"
IN_PATH=/user/pranab/reco/bigo
OUT_PATH=/user/pranab/reco/usso
echo "input $IN_PATH output $OUT_PATH"
hadoop fs -rmr $OUT_PATH
echo "removed output dir"

hadoop jar $JAR_NAME  $CLASS_NAME -Dconf.path=/home/pranab/Projects/bin/sifarish/reco.properties  $IN_PATH  $OUT_PATH


Configuration
=============
Here is a sample properties file (reco.properties) containing all the configurations

field.delim.regex=,
field.delim=,
num.reducer=1

#ImplicitRatingEstimator
rating.mapper.config.path=/user/pranab/meta/imra/engageEvent.json
rating.estimator.output.detail=true

#ItemDynamicAttributeSimilarity
bucket.count=10
hash.pair.multiplier=1000
similarity.algorithm=cosine
vec.type.boolean=false
vec.type.semantic=false
vec.count.included=true
distance.scale=1000
output.correlation=true
min.intersection.length=2

#UtilityPredictor
correlation.linear=true
correlation.linear.scale=1000
max.rating=100
sub.field.delim=:
rating.file.prefix=rating
rating.stat.file.prefix=stat
correlation.scale=1000
correlation.modifier=1.1

#UtilityAggregator
corr.length.weighted.average=false
input.rating.stdDev.weighted.average=false
rating.aggregator.average=true
semantic.matcher.class=org.sifarish.common.ResourceDescribedEntity
semantic.top.match.count=1
semantic.matcher.params=semantic.rdf.modelFilePath
semantic.rdf.modelFilePath=/user/pranab/reco/semantic/pref.rdf

#BusinessGoalInjector
biz.goal.file.prefix=biz
biz.goal.weights=25,15
max.biz.goal.weight=70
biz.goal.min.threshold=5,-1

sort.field=0

rating.scale=100
debug.on=true


 
